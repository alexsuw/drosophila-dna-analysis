#!/usr/bin/env python3
"""
üõë –ü–ï–†–ï–ó–ê–ü–£–°–ö –£–ú–ù–û–ì–û Z-HUNT –ê–ù–ê–õ–ò–ó–ê
- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
- –ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—ã–π —É–º–Ω—ã–π –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
"""

import subprocess
import os
import time
import sys

def stop_all_zhunt_processes():
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Z-Hunt"""
    print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Z-Hunt...")
    
    try:
        # –ò—â–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã zhunt
        result = subprocess.run(['pgrep', '-f', 'zhunt'], capture_output=True, text=True)
        
        if result.stdout.strip():
            pids = result.stdout.strip().split('\n')
            print(f"   –ù–∞–π–¥–µ–Ω–æ {len(pids)} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Z-Hunt")
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
            for pid in pids:
                try:
                    subprocess.run(['kill', '-TERM', pid], check=True)
                    print(f"   ‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å {pid}")
                except subprocess.CalledProcessError:
                    print(f"   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å {pid}")
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            print("   ‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
            time.sleep(3)
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–±–∏–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ—Ü–µ—Å—Å—ã
            result = subprocess.run(['pgrep', '-f', 'zhunt'], capture_output=True, text=True)
            if result.stdout.strip():
                remaining_pids = result.stdout.strip().split('\n')
                for pid in remaining_pids:
                    try:
                        subprocess.run(['kill', '-KILL', pid], check=True)
                        print(f"   üí• –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å {pid}")
                    except subprocess.CalledProcessError:
                        pass
        else:
            print("   ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã Z-Hunt –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")

def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    try:
        import psutil
        print("   ‚úÖ psutil —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("   üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º psutil...")
        subprocess.run([sys.executable, '-m', 'pip', 'install', 'psutil'], check=True)

def main():
    print("üöÄ" + "=" * 60)
    print("   –ü–ï–†–ï–ó–ê–ü–£–°–ö –£–ú–ù–û–ì–û Z-HUNT –ê–ù–ê–õ–ò–ó–ê")
    print("üöÄ" + "=" * 60)
    print()
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    stop_all_zhunt_processes()
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install_dependencies()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    genome_file = "data/genome/dm6.fa"
    output_file = "results/smart_zhunt_results.txt"
    
    if not os.path.exists(genome_file):
        print(f"‚ùå –§–∞–π–ª –≥–µ–Ω–æ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {genome_file}")
        sys.exit(1)
    
    print(f"‚úÖ –§–∞–π–ª –≥–µ–Ω–æ–º–∞ –Ω–∞–π–¥–µ–Ω: {genome_file}")
    print(f"üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_file}")
    print()
    
    # –ó–∞–ø—É—Å–∫ —É–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    print("üöÄ –ó–ê–ü–£–°–ö–ê–ï–ú –£–ú–ù–´–ô –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–´–ô Z-HUNT!")
    print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
    print("üíæ –í—Å–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ z_hunt_results/")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç
    cmd = [sys.executable, "scripts/smart_zhunt_parallel.py", genome_file, output_file]
    
    try:
        subprocess.run(cmd, check=True)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        stop_all_zhunt_processes()
    except subprocess.CalledProcessError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–Ω–∞–ª–∏–∑–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 